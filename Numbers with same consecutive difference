class Solution {
    public int[] numsSameConsecDiff(int N, int K) {
//for handling case where n=1, since we also want a 0 along with all the single digit numbers
             if (N == 1)  return new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9};

        List<Integer> result = new ArrayList<Integer>();
        for (int num = 1; num < 10; num++)
            dfs(N - 1, num, K, result);

        return result.stream().mapToInt(i -> i).toArray();
    }
    
    private void dfs(int N, int num, int diff, List<Integer> res ){
        if(N==0) {
            res.add(num);
              // System.out.println("list"+res.toString());
            return;
        }
        if(diff>0 && num%10-diff>=0){
            dfs(N-1,num*10+num%10-diff , diff, res);
            
        }
        if(num%10+diff<10){
            dfs(N-1, num*10+num%10+diff, diff, res);
        }
    }

}
#Status: Solved with help
