/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(k==0 || head==null) return head;
        ListNode temp=head;
        int size=1;
        while(temp.next!=null){
            temp=temp.next;
            size++;
        }
        k=k%size;
        // ListNode last=head;
        while(k-->0){
           ListNode last=head;
            temp=head;
            while(temp.next!=null){
                last=temp;
                temp=temp.next;
            }
            temp.next=head;
            head=temp;
            last.next=null;
            }
        return head;
        
    }
}
#Status: Could solve theoretically, stuck at coding part
