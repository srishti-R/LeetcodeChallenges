learnt something new
class Solution {
    public boolean search(int[] nums, int target) {
        if(nums.length==0) return false;
        int start=0;
        int end=nums.length-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(nums[mid]==target) return true;
            if(!canBeSearched(nums,start, nums[mid])){
                start++;
                continue;
            }
            boolean pivotArray=existsInFirst(nums, start, nums[mid]);
            boolean targetArray=existsInFirst(nums, start, target);
            if(pivotArray ^ targetArray){
                if(pivotArray){
                    start=mid+1;
                }
                else{
                    end=end-1;
                }
            }
            else{
                if(nums[mid]<target){
                    start=mid+1;
                }
                else {
                    end=mid-1;
                }
            }
        }
        return false;
    }
    
    boolean canBeSearched(int[] nums, int start, int element){
        return nums[start]!=element;
    }
    
    boolean existsInFirst(int[] nums,int start, int element){
        return nums[start]<=element;
    }
    
   
}
#Status:Took help
