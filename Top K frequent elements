class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        int[] res=new int[k];
        Map<Integer, Integer> map=new HashMap<>();
        for(int i=0; i<nums.length; i++){
            map.put(nums[i], map.getOrDefault(nums[i], 0)+1);
        }
        List<Map.Entry<Integer, Integer>> list=new ArrayList<>(map.entrySet());
        Collections.sort(list, new Comparator<Map.Entry<Integer, Integer>>(){
            public int compare(Map.Entry<Integer, Integer> o1, 
                               Map.Entry<Integer, Integer> o2) 
            { 
                if (o1.getValue() == o2.getValue()) 
                    return o2.getKey() - o1.getKey(); 
                else
                    return o2.getValue() - o1.getValue(); 
            }  
        });
        for(int j=0; j<k; j++){
            res[j]=list.get(j).getKey();
        }
        return res;
    }
}
# Status: Solved with help
