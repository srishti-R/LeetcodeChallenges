There are two ways of climbing, one step at a time or 2 steps. Basically the question wanted us to calculate fibonacci number at nth position.
class Solution {
    public int climbStairs(int n) {
        if(n<=2) return n;
        int[] dp=new int[n];
        dp[0]=1;
        dp[1]=2;
        for(int i=2; i<n; i++){
            dp[i]=dp[i-1]+dp[i-2];
        }
        return dp[n-1];
    }
}
# Status: I did it by dynamic programming to build answer at n-1 position.
