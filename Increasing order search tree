 public TreeNode increasingBST(TreeNode root) {
        if(root==null) return root;
        Stack<TreeNode> stack=new Stack<>();
        // stack.push(root);
        TreeNode curr=root;
        List<Integer> list=new ArrayList<>();
        while(curr!=null || stack.size()>0){
            while(curr!=null){
                stack.push(curr);
                // System.out.println("pushed"+curr.val);
                curr=curr.left;
                
            }
            //curr is null now
            curr=stack.pop();
            // System.out.println("popped"+curr.val);
            list.add(curr.val);
            curr=curr.right;
        }
        // System.out.println(list.toString());
        
        TreeNode ans=new TreeNode();
        TreeNode temp=ans;
        for(int i=0; i<list.size(); i++){
            temp.right=new TreeNode(list.get(i));
            temp=temp.right;
        }
        return ans.right;
    }
    #status: Solved
